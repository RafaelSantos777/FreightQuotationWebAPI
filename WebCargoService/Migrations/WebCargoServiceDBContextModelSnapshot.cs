// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebCargoService.Repositories;

#nullable disable

namespace WebCargoService.Migrations
{
    [DbContext(typeof(WebCargoServiceDBContext))]
    partial class WebCargoServiceDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebCargoService.Models.Entities.Rate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Airline")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CurrencyCode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("DestinationAirportIATACode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<decimal>("MinimumBreakpointCost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("OriginAirportIATACode")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("RateCacheDestinationAirportIATACode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("RateCacheOriginAirportIATACode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("SpecialHandlingCodeString")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<long>("UniqueCode")
                        .HasColumnType("bigint");

                    b.Property<DateOnly>("ValidFrom")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("ValidTo")
                        .HasColumnType("date");

                    b.Property<decimal>("VolumetricFactorMetric")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("Id");

                    b.HasIndex("UniqueCode")
                        .IsUnique();

                    b.HasIndex("RateCacheOriginAirportIATACode", "RateCacheDestinationAirportIATACode");

                    b.ToTable("Rates", (string)null);
                });

            modelBuilder.Entity("WebCargoService.Models.Entities.RateBreakpoint", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Cost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<long?>("RateId")
                        .HasColumnType("bigint");

                    b.Property<int>("Threshold")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RateId");

                    b.ToTable("RateBreakpoints", (string)null);
                });

            modelBuilder.Entity("WebCargoService.Models.Entities.RateCache", b =>
                {
                    b.Property<string>("OriginAirportIATACode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("DestinationAirportIATACode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("OriginAirportIATACode", "DestinationAirportIATACode");

                    b.ToTable("RateCaches", (string)null);
                });

            modelBuilder.Entity("WebCargoService.Models.Entities.RateSurcharge", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Cost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("CostType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsMandatory")
                        .HasColumnType("bit");

                    b.Property<decimal?>("MaximumCost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("MinimumCost")
                        .HasPrecision(10, 2)
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<long?>("RateId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("RateId");

                    b.ToTable("RateSurcharges", (string)null);
                });

            modelBuilder.Entity("WebCargoService.Models.Entities.Rate", b =>
                {
                    b.HasOne("WebCargoService.Models.Entities.RateCache", null)
                        .WithMany("Rates")
                        .HasForeignKey("RateCacheOriginAirportIATACode", "RateCacheDestinationAirportIATACode");
                });

            modelBuilder.Entity("WebCargoService.Models.Entities.RateBreakpoint", b =>
                {
                    b.HasOne("WebCargoService.Models.Entities.Rate", null)
                        .WithMany("Breakpoints")
                        .HasForeignKey("RateId");
                });

            modelBuilder.Entity("WebCargoService.Models.Entities.RateSurcharge", b =>
                {
                    b.HasOne("WebCargoService.Models.Entities.Rate", null)
                        .WithMany("Surcharges")
                        .HasForeignKey("RateId");
                });

            modelBuilder.Entity("WebCargoService.Models.Entities.Rate", b =>
                {
                    b.Navigation("Breakpoints");

                    b.Navigation("Surcharges");
                });

            modelBuilder.Entity("WebCargoService.Models.Entities.RateCache", b =>
                {
                    b.Navigation("Rates");
                });
#pragma warning restore 612, 618
        }
    }
}
